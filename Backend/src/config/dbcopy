import mysql from "mysql2/promise";
const pool = mysql.createPool({
  host: process.env.DB_HOST,
  user: process.env.DB_USER,
  password: process.env.DB_PASSWORD,
  database: process.env.DB_NAME,
  port: Number(process.env.DB_PORT) || 3306,
  waitForConnections: true,
  connectionLimit: 10,
  queueLimit: 0,
});

export default pool;
// initDB plus robuste
export async function initDB({ retries = 8, delayMs = 1000 } = {}) {
  let attempt = 0;
  while (attempt < retries) {
    try {
      attempt++;
      console.log(`üîå Tentative DB #${attempt} ...`);
      const conn = await pool.getConnection();
      await conn.ping();
      conn.release();
      console.log("‚úÖ Connexion MySQL OK");
      return;
    } catch (err) {
      console.error("‚ùå Erreur connexion :", err.code || err.message);
      const backoff = delayMs * Math.min(8, 2 ** (attempt - 1)); // 1s, 2s, 4s, 8s, ...
      await new Promise(r => setTimeout(r, backoff));
    }
  }
  throw new Error("DB non joignable apr√®s retries");
}
